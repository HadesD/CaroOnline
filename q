[1mdiff --git a/Client/app/scenes/PlayScene.hpp b/Client/app/scenes/PlayScene.hpp[m
[1mindex a7d5e92..0792bd7 100644[m
[1m--- a/Client/app/scenes/PlayScene.hpp[m
[1m+++ b/Client/app/scenes/PlayScene.hpp[m
[36m@@ -21,6 +21,12 @@[m [mnamespace app { namespace scenes {[m
     public:[m
       typedef std::vector< std::vector< int > > GameBoard;[m
       typedef std::vector< std::shared_ptr< app::Player > > ListPlayer;[m
[32m+[m[32m      enum class GameState[m
[32m+[m[32m      {[m
[32m+[m[32m        WIN,[m
[32m+[m[32m          LOSE,[m
[32m+[m[32m          DRAW[m
[32m+[m[32m      };[m
 [m
     public:[m
       PlayScene(const std::shared_ptr<app::core::Game> &game);[m
[36m@@ -33,6 +39,7 @@[m [mnamespace app { namespace scenes {[m
 [m
     public:[m
       void drawGameBoard();[m
[32m+[m[32m      GameState checkMoveState(const app::Point2D &p);[m
       void checkFinish();[m
       void quit();[m
 [m
[1mdiff --git a/Client/src/Scene.cpp b/Client/src/Scene.cpp[m
[1mindex b4f064f..3695ca8 100644[m
[1m--- a/Client/src/Scene.cpp[m
[1m+++ b/Client/src/Scene.cpp[m
[36m@@ -3,9 +3,8 @@[m
 [m
 namespace app {[m
 [m
[31m-  Scene::Scene(const std::shared_ptr<app::core::Game> &game)[m
[32m+[m[32m  Scene::Scene(const std::shared_ptr<app::core::Game> &game) : m_pGame(game)[m
   {[m
[31m-    m_pGame = game;[m
   }[m
 [m
   Scene::~Scene()[m
[1mdiff --git a/Client/src/core/Game.cpp b/Client/src/core/Game.cpp[m
[1mindex 367ac41..4c64002 100644[m
[1m--- a/Client/src/core/Game.cpp[m
[1m+++ b/Client/src/core/Game.cpp[m
[36m@@ -32,10 +32,7 @@[m [mnamespace app { namespace core {[m
 [m
   void Game::init()[m
   {[m
[31m-    // m_pScene = std::make_shared<scenes::PlayScene>(this->shared_from_this());[m
[31m-    m_pScene = std::make_shared<scenes::IntroScene>(this->shared_from_this());[m
[31m-[m
[31m-    m_pScene->init();[m
[32m+[m[32m    this->setScene(std::make_shared<app::scenes::IntroScene>(this->shared_from_this()));[m
   }[m
 [m
   void Game::render()[m
[1mdiff --git a/Client/src/scenes/PlayScene.cpp b/Client/src/scenes/PlayScene.cpp[m
[1mindex 1af387f..1430b8a 100644[m
[1m--- a/Client/src/scenes/PlayScene.cpp[m
[1m+++ b/Client/src/scenes/PlayScene.cpp[m
[36m@@ -300,6 +300,12 @@[m [mnamespace app { namespace scenes {[m
     }[m
   }[m
 [m
[32m+[m[32m  PlayScene::GameState PlayScene::checkMoveState(const app::Point2D &p)[m
[32m+[m[32m  {[m
[32m+[m
[32m+[m[32m    return PlayScene::GameState::WIN;[m
[32m+[m[32m  }[m
[32m+[m
   Point2D PlayScene::getCursor() const[m
   {[m
     return m_cursor;[m
